@inject NavigationManager NavManager;
@inject BlazorDOS.SendSMS SendSMS;
@inject BlazorDOS.Commands.BaseCommands BaseCommand;



@foreach (var priorInput in priorInputs)
{
    <div class="dos-prompt-container">
        <p class="prompt-label">C:></p>
        <p class="dos-output">@priorInput.PriorInput</p>
    </div>


    @switch (priorInput.PriorInput.ToString().ToLower())
    {
        case "help":
            {

                <HelpComponent></HelpComponent>
                
                


            }
            break;
        case "sms":
            { 
                @*<div class="dos-prompt-container">
                    <p class="dos-output">Text Message Status:  @twilioResponse</p>
                </div>*@
                
                <WebConsoleWriteLine WebOutput=@twilioResponse></WebConsoleWriteLine>
            }
            break;
        case "table":
            {
                <WebConsoleTable></WebConsoleTable>
            }
            break;
        default:
            {
                <WebConsoleWriteLine WebOutput=@unknownCommand(priorInput.PriorInput.ToString())></WebConsoleWriteLine>
            }
            break;
    }

}

<div class="dos-prompt-container" @onkeydown="@Enter">
    <p class="prompt-label">C:></p>
    <input type="text" id="dosPrompt" class="dos-prompt-input" @bind="priorPrompt" @onkeydown="@Enter" autofocus />
</div>

@code{
    private IList<PriorInputs> priorInputs = new List<PriorInputs>();
    private string priorPrompt;
    private string dosResponse;
    private string textMessage;
    private string twilioResponse;
    private string unknownCommandResponse;

    private string unknownCommand(string priorPrompt)
    {
        return unknownCommandResponse = "'" + priorPrompt + "' is not recognized as an internal or external command, operable program or batch file.";
    }

    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            if (!string.IsNullOrWhiteSpace(priorPrompt))
            {
                if (priorPrompt.ToLower() == "win")
                {
                    NavManager.NavigateTo("/win95redirect");
                }
                else if (priorPrompt.ToLower() == "sms")
                {
                    twilioResponse = "Text message status:  '"+ SendSMS.TextMsg("Blazor Test") + "'";
                    priorInputs.Add(new PriorInputs { PriorInput = priorPrompt });
                    priorPrompt = string.Empty;
                }
                else
                {
                    priorInputs.Add(new PriorInputs { PriorInput = priorPrompt });
                    priorPrompt = string.Empty;
                }

            }
        }
    }



}
